{"ast":null,"code":"var _jsxFileName = \"/home/jose/Projects/web/minicodelab-examples/challenges-hooks-p1/src/components/BitcoinConversor.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BitcoinConversor = () => {\n  _s();\n\n  const [coin, setCoin] = useState({\n    euro: 1,\n    bitcoin: 0.01\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Convierte Euros a Bitcoins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: coin.euro,\n      min: \"1\",\n      onChange: e => {\n        setCoin({ ...coin,\n          euro: +e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [coin.euro, \" EUR = \", (coin.bitcoin * coin.euro).toFixed(2), \" BTC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BitcoinConversor, \"9ksqbtDVeoibE8R6wdR4oWMqIgU=\");\n\n_c = BitcoinConversor;\n\nvar _c;\n\n$RefreshReg$(_c, \"BitcoinConversor\");","map":{"version":3,"sources":["/home/jose/Projects/web/minicodelab-examples/challenges-hooks-p1/src/components/BitcoinConversor.tsx"],"names":["useState","BitcoinConversor","coin","setCoin","euro","bitcoin","e","target","value","toFixed"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAOA,OAAO,MAAMC,gBAA0B,GAAG,MAAM;AAAA;;AAC9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAe;AAC7CI,IAAAA,IAAI,EAAE,CADuC;AAE7CC,IAAAA,OAAO,EAAE;AAFoC,GAAf,CAAhC;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAEH,IAAI,CAACE,IAFd;AAGE,MAAA,GAAG,EAAC,GAHN;AAIE,MAAA,QAAQ,EAAGE,CAAD,IAAO;AACfH,QAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENE,UAAAA,IAAI,EAAE,CAACE,CAAC,CAACC,MAAF,CAASC;AAFV,SAAD,CAAP;AAID;AATH;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAA,iBAAKN,IAAI,CAACE,IAAV,aAAuB,CAACF,IAAI,CAACG,OAAL,GAAeH,IAAI,CAACE,IAArB,EAA2BK,OAA3B,CAAmC,CAAnC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvBM;;GAAMR,gB;;KAAAA,gB","sourcesContent":["import { useState } from 'react';\n\ntype CoinExchange = {\n  euro: number;\n  bitcoin: number;\n};\n\nexport const BitcoinConversor: React.FC = () => {\n  const [coin, setCoin] = useState<CoinExchange>({\n    euro: 1,\n    bitcoin: 0.01\n  });\n  \n  return (\n    <div>\n      <h2>Convierte Euros a Bitcoins</h2>\n      <input \n        type=\"number\"\n        value={coin.euro}\n        min=\"1\"\n        onChange={(e) => {\n          setCoin({\n            ...coin,\n            euro: +e.target.value,\n          })\n        }}\n      />\n      <h3>{coin.euro} EUR = {(coin.bitcoin * coin.euro).toFixed(2)} BTC</h3>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}